<?php
/**
 * Created by PhpStorm.
 * User: yhy
 * Date: 2019/10/11
 * Time: 11:07
 */

namespace app\admin\controller;


use think\Controller;
use think\Db;

class Goods extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function openinsert()
    {
        $cate = Db::table('category')->order('id', 'asc')->select();
        $this->assign('cate', $cate);
        return $this->fetch();
    }

    public function insert()
    {
        $method = $this->request->method();
        if ($method != 'POST') {
            return json(['code' => 404, 'msg' => "插入失败"]);
        }
        $data = input('post.');
//       $validata=validate('Nav');
//       if(! $validata->scene('insert')->check($data)){
//           return json(['code'=>404,'msg'=>$validata->getError()]);
//       };
        date_default_timezone_set("Asia/Shanghai");
        $data['create_time'] = date('Y-m-d h:i:s');


        $result = Db::table('goods')->insert($data);
        if ($result > 0) {
            return json(['code' => 200, 'msg' => "插入成功"]);
        } else {
            return json(['code' => 404, 'msg' => "插入失败"]);
        }

    }

    public function index()
    {
        $cate = Db::table('category')->select();
        $this->assign('cate', $cate);
        return $this->fetch();
    }

    public function query()
    {
        //总数
        //当前 select*from goods order by gid asc limit offset,length
        //搜索的条件
        $a = $this->request->get();

        $where = "";
        if(count($a)>2){
            $dat=$a['a'];
            if($dat['cid']){
                $where='cid='.$dat['cid'];
            }
            if($dat['gname']){
                if($where){
                    $where.=' and  gname like "%'.$dat['gname'].'%"';
                }else{
                    $where.='gname like "%'.$dat['gname'].'%"';
                }
            }
            if($dat['price_max']&&$dat['price_min']){
                if($where){
                    $where .=" and sale between ".$dat['price_min']." and ".$dat['price_max'];
                }else{
                    $where .="sale between ".$dat['price_min']." and ".$dat['price_max'];
                }

            }

        }
        $page = $a['page'];
        $limit = $a['limit'];
        $count = Db::table('goods')->where($where)->count();
        $data = Db::table('goods')->where($where)->page($page, $limit)->select();

        return json([
            'code' => 0,
            'msg' => '数据获取成功',
            'data' => $data,
            'count' => $count
        ]);
    }

    public function delete()
    {
        $method = $this->request->method();
        if ($method != 'POST') {
            return json(['code' => 404, 'msg' => "插入失败"]);
        }
//        $data=input('post.');
//        $validata=validate('Category');
//        if(! $validata->scene('del')->check($data)){
//            return json(['code'=>404,'msg'=>$validata->getError()]);
//        };
        $id = input('post.gid');

        $data = Db::table('goods')->where('gid', $id)->delete();
        if ($data > 0) {
            return json(['code' => 200, 'msg' => "插入成功"]);
        } else {
            return json(['code' => 404, 'msg' => "插入失败"]);
        }
    }

}